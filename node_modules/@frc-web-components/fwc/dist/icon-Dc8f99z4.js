import { r as h, i as u, x as g, n as r } from "./property-C4BPH-wS.js";
const o = {
  check: "M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z",
  "check-circle": "M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm4.59-12.42L10 14.17l-2.59-2.58L6 13l4 4 8-8z",
  close: "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z",
  edit: "M14.06 9.02l.92.92L5.92 19H5v-.92l9.06-9.06M17.66 3c-.25 0-.51.1-.7.29l-1.83 1.83 3.75 3.75 1.83-1.83c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.2-.2-.45-.29-.71-.29zm-3.6 3.19L3 17.25V21h3.75L17.81 9.94l-3.75-3.75z"
};
var d = Object.defineProperty, n = (e, s, a, v) => {
  for (var i = void 0, c = e.length - 1, p; c >= 0; c--)
    (p = e[c]) && (i = p(s, a, i) || i);
  return i && d(s, a, i), i;
};
const y = {
  dashboard: {
    displayName: "Icon",
    defaultHtml: `<frc-icon icon="${Object.keys(o)[0]}"></frc-icon>`
  },
  properties: {
    color: {
      type: "String",
      defaultValue: "#000000",
      input: { type: "ColorPicker" }
    },
    icon: {
      type: "String",
      defaultValue: Object.keys(o)[0],
      input: {
        type: "StringDropdown",
        allowCustomValues: !1,
        getOptions() {
          return ["Custom"].concat(Object.keys(o));
        }
      }
    },
    svgPath: {
      type: "String",
      attribute: "svg-path",
      defaultValue: "",
      input: {
        isDisabled({ icon: e }) {
          return e !== "Custom";
        }
      }
    },
    viewBox: {
      type: "String",
      attribute: "view-box",
      defaultValue: "0 0 24 24",
      input: {
        isDisabled({ icon: e }) {
          return e !== "Custom";
        }
      }
    }
  }
}, l = class l extends h {
  constructor() {
    super(...arguments), this.color = "#000000", this.icon = "", this.svgPath = "", this.viewBox = "0 0 24 24";
  }
  render() {
    const s = this.icon === "Custom" || !this.icon;
    return g`
      <svg
        xmlns="http://www.w3.org/2000/svg"
        height="24px"
        viewBox=${s ? this.viewBox : "0 0 24 24"}
        width="24px"
        fill=${this.color}
      >
        <path d=${s ? this.svgPath : o[this.icon]} />
      </svg>
    `;
  }
};
l.styles = u`
    :host {
      display: inline-block;
      width: 24px;
      height: 24px;
    }

    svg {
      width: 100%;
      height: 100%;
    }
  `;
let t = l;
n([
  r({ type: String })
], t.prototype, "color");
n([
  r({ type: String })
], t.prototype, "icon");
n([
  r({ type: String, attribute: "svg-path" })
], t.prototype, "svgPath");
n([
  r({ type: String, attribute: "view-box" })
], t.prototype, "viewBox");
customElements.get("frc-icon") || customElements.define("frc-icon", t);
export {
  t as I,
  y as a,
  o as i
};
