var _ = (r, e, t) => {
  if (!e.has(r))
    throw TypeError("Cannot " + t);
}, s = (r, e, t) => (_(r, e, "read from private field"), t ? t.call(r) : e.get(r)), n = (r, e, t) => {
  if (e.has(r))
    throw TypeError("Cannot add the same private member more than once");
  e instanceof WeakSet ? e.add(r) : e.set(r, t);
}, h = (r, e, t, i) => (_(r, e, "write to private field"), e.set(r, t), t), a = (r, e, t) => (_(r, e, "access private method"), t), Ve = 1 / 0, Pe = "[object Symbol]", Te = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g, Re = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g, J = "\\ud800-\\udfff", de = "\\u0300-\\u036f\\ufe20-\\ufe23", fe = "\\u20d0-\\u20f0", pe = "\\u2700-\\u27bf", ve = "a-z\\xdf-\\xf6\\xf8-\\xff", Ue = "\\xac\\xb1\\xd7\\xf7", Ie = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf", ze = "\\u2000-\\u206f", Le = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", Se = "A-Z\\xc0-\\xd6\\xd8-\\xde", ge = "\\ufe0e\\ufe0f", be = Ue + Ie + ze + Le, ee = "['’]", Ze = "[" + J + "]", ie = "[" + be + "]", D = "[" + de + fe + "]", we = "\\d+", He = "[" + pe + "]", me = "[" + ve + "]", ye = "[^" + J + be + we + pe + ve + Se + "]", q = "\\ud83c[\\udffb-\\udfff]", Ne = "(?:" + D + "|" + q + ")", xe = "[^" + J + "]", te = "(?:\\ud83c[\\udde6-\\uddff]){2}", re = "[\\ud800-\\udbff][\\udc00-\\udfff]", g = "[" + Se + "]", Ee = "\\u200d", oe = "(?:" + me + "|" + ye + ")", De = "(?:" + g + "|" + ye + ")", ne = "(?:" + ee + "(?:d|ll|m|re|s|t|ve))?", ue = "(?:" + ee + "(?:D|LL|M|RE|S|T|VE))?", ke = Ne + "?", je = "[" + ge + "]?", Ge = "(?:" + Ee + "(?:" + [xe, te, re].join("|") + ")" + je + ke + ")*", We = je + ke + Ge, Je = "(?:" + [He, te, re].join("|") + ")" + We, Ke = "(?:" + [xe + D + "?", D, te, re, Ze].join("|") + ")", Fe = RegExp(ee, "g"), Ye = RegExp(D, "g"), qe = RegExp(q + "(?=" + q + ")|" + Ke + We, "g"), $e = RegExp([
  g + "?" + me + "+" + ne + "(?=" + [ie, g, "$"].join("|") + ")",
  De + "+" + ue + "(?=" + [ie, g + oe, "$"].join("|") + ")",
  g + "?" + oe + "+" + ne,
  g + "+" + ue,
  we,
  Je
].join("|"), "g"), Be = RegExp("[" + Ee + J + de + fe + ge + "]"), Qe = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/, Xe = {
  // Latin-1 Supplement block.
  À: "A",
  Á: "A",
  Â: "A",
  Ã: "A",
  Ä: "A",
  Å: "A",
  à: "a",
  á: "a",
  â: "a",
  ã: "a",
  ä: "a",
  å: "a",
  Ç: "C",
  ç: "c",
  Ð: "D",
  ð: "d",
  È: "E",
  É: "E",
  Ê: "E",
  Ë: "E",
  è: "e",
  é: "e",
  ê: "e",
  ë: "e",
  Ì: "I",
  Í: "I",
  Î: "I",
  Ï: "I",
  ì: "i",
  í: "i",
  î: "i",
  ï: "i",
  Ñ: "N",
  ñ: "n",
  Ò: "O",
  Ó: "O",
  Ô: "O",
  Õ: "O",
  Ö: "O",
  Ø: "O",
  ò: "o",
  ó: "o",
  ô: "o",
  õ: "o",
  ö: "o",
  ø: "o",
  Ù: "U",
  Ú: "U",
  Û: "U",
  Ü: "U",
  ù: "u",
  ú: "u",
  û: "u",
  ü: "u",
  Ý: "Y",
  ý: "y",
  ÿ: "y",
  Æ: "Ae",
  æ: "ae",
  Þ: "Th",
  þ: "th",
  ß: "ss",
  // Latin Extended-A block.
  Ā: "A",
  Ă: "A",
  Ą: "A",
  ā: "a",
  ă: "a",
  ą: "a",
  Ć: "C",
  Ĉ: "C",
  Ċ: "C",
  Č: "C",
  ć: "c",
  ĉ: "c",
  ċ: "c",
  č: "c",
  Ď: "D",
  Đ: "D",
  ď: "d",
  đ: "d",
  Ē: "E",
  Ĕ: "E",
  Ė: "E",
  Ę: "E",
  Ě: "E",
  ē: "e",
  ĕ: "e",
  ė: "e",
  ę: "e",
  ě: "e",
  Ĝ: "G",
  Ğ: "G",
  Ġ: "G",
  Ģ: "G",
  ĝ: "g",
  ğ: "g",
  ġ: "g",
  ģ: "g",
  Ĥ: "H",
  Ħ: "H",
  ĥ: "h",
  ħ: "h",
  Ĩ: "I",
  Ī: "I",
  Ĭ: "I",
  Į: "I",
  İ: "I",
  ĩ: "i",
  ī: "i",
  ĭ: "i",
  į: "i",
  ı: "i",
  Ĵ: "J",
  ĵ: "j",
  Ķ: "K",
  ķ: "k",
  ĸ: "k",
  Ĺ: "L",
  Ļ: "L",
  Ľ: "L",
  Ŀ: "L",
  Ł: "L",
  ĺ: "l",
  ļ: "l",
  ľ: "l",
  ŀ: "l",
  ł: "l",
  Ń: "N",
  Ņ: "N",
  Ň: "N",
  Ŋ: "N",
  ń: "n",
  ņ: "n",
  ň: "n",
  ŋ: "n",
  Ō: "O",
  Ŏ: "O",
  Ő: "O",
  ō: "o",
  ŏ: "o",
  ő: "o",
  Ŕ: "R",
  Ŗ: "R",
  Ř: "R",
  ŕ: "r",
  ŗ: "r",
  ř: "r",
  Ś: "S",
  Ŝ: "S",
  Ş: "S",
  Š: "S",
  ś: "s",
  ŝ: "s",
  ş: "s",
  š: "s",
  Ţ: "T",
  Ť: "T",
  Ŧ: "T",
  ţ: "t",
  ť: "t",
  ŧ: "t",
  Ũ: "U",
  Ū: "U",
  Ŭ: "U",
  Ů: "U",
  Ű: "U",
  Ų: "U",
  ũ: "u",
  ū: "u",
  ŭ: "u",
  ů: "u",
  ű: "u",
  ų: "u",
  Ŵ: "W",
  ŵ: "w",
  Ŷ: "Y",
  ŷ: "y",
  Ÿ: "Y",
  Ź: "Z",
  Ż: "Z",
  Ž: "Z",
  ź: "z",
  ż: "z",
  ž: "z",
  Ĳ: "IJ",
  ĳ: "ij",
  Œ: "Oe",
  œ: "oe",
  ŉ: "'n",
  ſ: "ss"
}, _e = typeof global == "object" && global && global.Object === Object && global, et = typeof self == "object" && self && self.Object === Object && self, tt = _e || et || Function("return this")();
function rt(r, e, t, i) {
  var o = -1, u = r ? r.length : 0;
  for (i; ++o < u; )
    t = e(t, r[o], o, r);
  return t;
}
function st(r) {
  return r.split("");
}
function it(r) {
  return r.match(Te) || [];
}
function ot(r) {
  return function(e) {
    return r == null ? void 0 : r[e];
  };
}
var nt = ot(Xe);
function Me(r) {
  return Be.test(r);
}
function ut(r) {
  return Qe.test(r);
}
function at(r) {
  return Me(r) ? ht(r) : st(r);
}
function ht(r) {
  return r.match(qe) || [];
}
function ct(r) {
  return r.match($e) || [];
}
var lt = Object.prototype, dt = lt.toString, ae = tt.Symbol, he = ae ? ae.prototype : void 0, ce = he ? he.toString : void 0;
function ft(r, e, t) {
  var i = -1, o = r.length;
  e < 0 && (e = -e > o ? 0 : o + e), t = t > o ? o : t, t < 0 && (t += o), o = e > t ? 0 : t - e >>> 0, e >>>= 0;
  for (var u = Array(o); ++i < o; )
    u[i] = r[i + e];
  return u;
}
function pt(r) {
  if (typeof r == "string")
    return r;
  if (wt(r))
    return ce ? ce.call(r) : "";
  var e = r + "";
  return e == "0" && 1 / r == -Ve ? "-0" : e;
}
function vt(r, e, t) {
  var i = r.length;
  return t = t === void 0 ? i : t, !e && t >= i ? r : ft(r, e, t);
}
function St(r) {
  return function(e) {
    e = K(e);
    var t = Me(e) ? at(e) : void 0, i = t ? t[0] : e.charAt(0), o = t ? vt(t, 1).join("") : e.slice(1);
    return i[r]() + o;
  };
}
function gt(r) {
  return function(e) {
    return rt(kt(xt(e).replace(Fe, "")), r, "");
  };
}
function bt(r) {
  return !!r && typeof r == "object";
}
function wt(r) {
  return typeof r == "symbol" || bt(r) && dt.call(r) == Pe;
}
function K(r) {
  return r == null ? "" : pt(r);
}
var mt = gt(function(r, e, t) {
  return e = e.toLowerCase(), r + (t ? yt(e) : e);
});
function yt(r) {
  return Et(K(r).toLowerCase());
}
function xt(r) {
  return r = K(r), r && r.replace(Re, nt).replace(Ye, "");
}
var Et = St("toUpperCase");
function kt(r, e, t) {
  return r = K(r), e = e, e === void 0 ? ut(r) ? ct(r) : it(r) : r.match(e) || [];
}
var j, p, R, v, W, b, U;
class jt {
  constructor(e, t, i, o) {
    n(this, j, void 0), n(this, p, {}), n(this, R, void 0), n(this, v, void 0), n(this, W, !1), n(this, b, void 0), n(this, U, void 0), h(this, U, e), h(this, b, t), h(this, j, i), h(this, R, o);
  }
  getKey() {
    return s(this, j);
  }
  hasValue() {
    return s(this, W);
  }
  getValue() {
    return s(this, v);
  }
  setValue(e) {
    h(this, v, e), h(this, W, !0);
  }
  removeValue() {
    h(this, v, void 0), h(this, W, !1);
  }
  getSourceValue() {
    return this.hasChildren() ? s(this, b) : s(this, v);
  }
  setSourceValue(e) {
    s(this, U).userUpdate(s(this, j), e);
  }
  getChildren() {
    return s(this, p);
  }
  hasChildren() {
    return Object.getOwnPropertyNames(s(this, p)).length > 0;
  }
  addChild(e, t) {
    const i = e.split("/").at(-1);
    typeof i > "u" || (s(this, p)[i] = t, !(typeof i > "u") && Object.defineProperty(s(this, b), i, {
      configurable: !0,
      enumerable: !0,
      set(o) {
        t.setSourceValue(o);
      },
      get() {
        return t.getSourceValue();
      }
    }));
  }
  removeChild(e) {
    const t = e.split("/").at(-1);
    typeof t < "u" && (delete s(this, p)[t], delete s(this, b)[t]);
  }
  getParent() {
    return s(this, R);
  }
  getJson(e = !0) {
    if (this.hasChildren()) {
      const t = {};
      return Object.entries(s(this, p)).forEach(([i, o]) => {
        const u = e ? mt(i) : i;
        t[u] = o.getJson(e);
      }), t;
    }
    return s(this, v);
  }
}
j = /* @__PURE__ */ new WeakMap(), p = /* @__PURE__ */ new WeakMap(), R = /* @__PURE__ */ new WeakMap(), v = /* @__PURE__ */ new WeakMap(), W = /* @__PURE__ */ new WeakMap(), b = /* @__PURE__ */ new WeakMap(), U = /* @__PURE__ */ new WeakMap();
function Wt(r) {
  return r.hasValue() ? !1 : Object.keys(r.getChildren()).length === 0;
}
var M, E, d, x, f, V, I, $, Oe, B, Ae, G, Q, X, le, S, w;
class Mt {
  constructor(e) {
    n(this, $), n(this, B), n(this, G), n(this, X), n(this, S), n(this, M, /* @__PURE__ */ new Map()), n(this, E, /* @__PURE__ */ new Set()), n(this, d, /* @__PURE__ */ new Map()), n(this, x, void 0), n(this, f, {}), n(this, V, /* @__PURE__ */ new Map()), n(this, I, void 0), h(this, x, e), h(this, I, {
      clearSources: e.addClearSourcesHandler(() => {
        this.clearSources();
      }),
      sourcesChanged: e.addSourcesChangedHandler((t) => {
        Object.entries(t).forEach(([i, o]) => {
          this.updateSource(i, o, !1);
        }), Object.entries(t).forEach(([i]) => {
          a(this, S, w).call(this, i);
        });
      }),
      sourcesRemoved: e.addSourcesRemovedHandler((t) => {
        const i = t.filter((o) => s(this, d).has(o));
        i.forEach((o) => this.removeSource(o), !1), i.forEach((o) => {
          a(this, S, w).call(this, o);
        });
      })
    });
  }
  getSourceProvider() {
    return s(this, x);
  }
  getSource(e) {
    return s(this, d).get(e);
  }
  getSourceValue(e) {
    var t;
    return (t = this.getSource(e)) == null ? void 0 : t.getSourceValue();
  }
  updateSource(e, t, i = !0) {
    a(this, $, Oe).call(this, e), a(this, B, Ae).call(this, e);
    const o = s(this, d).get(e);
    o == null || o.setValue(t), i && a(this, S, w).call(this, e);
  }
  clearSources() {
    const e = [];
    s(this, d).forEach((t, i) => {
      e.push(i), this.removeSource(i, !1);
    }), e.forEach((t) => a(this, S, w).call(this, t));
  }
  removeSource(e, t = !0) {
    const i = s(this, d).get(e);
    i && (i.removeValue(), a(this, G, Q).call(this, i), t && a(this, S, w).call(this, e), s(this, E).delete(e));
  }
  subscribe(e, t, i) {
    var o;
    typeof s(this, f)[e] > "u" && (s(this, f)[e] = /* @__PURE__ */ new Map());
    const u = Symbol("SourceSubscriber");
    return s(this, f)[e].set(u, t), i && ((o = this.getSource(e)) != null && o.hasValue() || s(this, x).requestSource(e), t(this.getSourceValue(e), e, e)), () => {
      s(this, f)[e].delete(u);
    };
  }
  subscribeAll(e, t) {
    const i = Symbol("SourceSubscriberAll");
    return s(this, V).set(i, e), t && s(this, E).forEach((o) => {
      e(this.getSourceValue(o), o);
    }), () => {
      s(this, V).delete(i);
    };
  }
  unsubscribeFromProvider() {
    const { clearSources: e, sourcesChanged: t, sourcesRemoved: i } = s(this, I);
    e(), t(), i();
  }
}
M = /* @__PURE__ */ new WeakMap(), E = /* @__PURE__ */ new WeakMap(), d = /* @__PURE__ */ new WeakMap(), x = /* @__PURE__ */ new WeakMap(), f = /* @__PURE__ */ new WeakMap(), V = /* @__PURE__ */ new WeakMap(), I = /* @__PURE__ */ new WeakMap(), $ = /* @__PURE__ */ new WeakSet(), Oe = function(r) {
  s(this, E).has(r) || s(this, E).add(r);
}, B = /* @__PURE__ */ new WeakSet(), Ae = function(r) {
  const e = r.split("/");
  let t;
  e.forEach((i, o) => {
    const u = e.slice(0, o + 1).join("/");
    if (!s(this, d).has(u)) {
      const k = s(this, d).get(t), se = new jt(
        s(this, x),
        a(this, X, le).call(this, u),
        u,
        k
      );
      s(this, d).set(u, se), k == null || k.addChild(u, se);
    }
    t = u;
  });
}, G = /* @__PURE__ */ new WeakSet(), Q = function(r) {
  const e = Wt(r), t = r.getParent();
  e && t && (t.removeChild(r.getKey()), s(this, d).delete(r.getKey()), a(this, G, Q).call(this, t));
}, X = /* @__PURE__ */ new WeakSet(), le = function(r) {
  return s(this, M).has(r) || s(this, M).set(r, {}), s(this, M).get(r);
}, S = /* @__PURE__ */ new WeakSet(), w = function(r) {
  const e = r.split("/"), t = this.getSourceValue(r);
  e.forEach((i, o) => {
    const u = e.slice(0, o + 1).join("/");
    u in s(this, f) && s(this, f)[u].forEach((k) => {
      k(this.getSourceValue(u), u, r);
    });
  }), s(this, V).forEach((i) => {
    i(t, r);
  });
};
var c, z, L, Z;
class Ot {
  constructor() {
    n(this, c, {}), n(this, z, []), n(this, L, void 0), n(this, Z, []);
  }
  hasSourceProvider(e) {
    return e in s(this, c);
  }
  addSourceProvider(e, t) {
    if (this.hasSourceProvider(e))
      throw new Error("A source provider with that name has already been added.");
    const i = new Mt(t);
    s(this, c)[e] = i, s(this, z).forEach((o) => {
      o(e);
    });
  }
  sourceProviderAdded(e) {
    s(this, z).push(e);
  }
  removeSourceProvider(e) {
    this.hasSourceProvider(e) && (this.getSourceProvider(e).disconnect(), s(this, c)[e].unsubscribeFromProvider(), delete s(this, c)[e]);
  }
  getSourceProvider(e) {
    return s(this, c)[e].getSourceProvider();
  }
  getSourceProviderNames() {
    return Object.keys(s(this, c));
  }
  setDefaultSourceProvider(e) {
    h(this, L, e), s(this, Z).forEach((t) => {
      t(e);
    });
  }
  defaultSourceProviderSet(e) {
    if (typeof e != "function")
      throw new Error("listener is not a function");
    s(this, Z).push(e);
  }
  getDefaultSourceProvider() {
    return s(this, L);
  }
  getSource(e, t) {
    var i;
    return (i = s(this, c)[e]) == null ? void 0 : i.getSource(t);
  }
  getSourceValue(e, t) {
    var i;
    return (i = s(this, c)[e]) == null ? void 0 : i.getSourceValue(t);
  }
  subscribe(e, t, i, o) {
    var u;
    return (u = s(this, c)[e]) == null ? void 0 : u.subscribe(t, i, o);
  }
  subscribeAll(e, t, i) {
    var o;
    return (o = s(this, c)[e]) == null ? void 0 : o.subscribeAll(t, i);
  }
}
c = /* @__PURE__ */ new WeakMap(), z = /* @__PURE__ */ new WeakMap(), L = /* @__PURE__ */ new WeakMap(), Z = /* @__PURE__ */ new WeakMap();
const Ce = () => {
};
var m, l, O, A, P, T, y, C, H, F, N, Y;
class At {
  constructor(e = {}, t = 0) {
    n(this, y), n(this, H), n(this, N), n(this, m, void 0), n(this, l, {}), n(this, O, void 0), n(this, A, /* @__PURE__ */ new Map()), n(this, P, /* @__PURE__ */ new Map()), n(this, T, /* @__PURE__ */ new Map()), t && h(this, m, setInterval(a(this, y, C).bind(this), t)), Object.entries(e).forEach(([i, o]) => {
      this.updateSource(i, o);
    });
  }
  /**
   * Updates the value of a source in the store. If the source doesn't
   * exist then it is added. Should only be called internally by the
   * source provider.
   *
   * @protected
   * @param {string} key - The source's key. This is a string separated
   * by '/'.
   * @param {*} value - The new value.
   */
  updateSource(e, t) {
    clearTimeout(s(this, O)), s(this, l)[e] === void 0 ? s(this, l)[e] = {
      first: {
        type: "change",
        value: t
      }
    } : s(this, l)[e].last = {
      type: "change",
      value: t
    }, s(this, m) || a(this, y, C).call(this);
  }
  /**
   * Removes an existing source from the store. If the source
   * doesn't exist this does nothing. Should only be called
   * internally by the source provider.
   *
   * @protected
   * @param {string} key - The source's key. This is a string separated
   * by '/'.
   */
  removeSource(e) {
    s(this, l)[e] === void 0 ? s(this, l)[e] = {
      first: {
        type: "removal"
      }
    } : s(this, l)[e].last = {
      type: "removal"
    }, s(this, m) || a(this, y, C).call(this);
  }
  /**
   * Removes all sources in the store for this provider. Should only be
   * called internally by the source provider.
   *
   * @protected
   * @param {function} callback - An optional callback. Called when sources
   * have been cleared.
   */
  clearSources(e = Ce) {
    a(this, y, C).call(this, () => {
      s(this, A).forEach((t) => t()), e();
    });
  }
  /**
   * Removes all sources in the store for this provider after a period of time.
   * If a source is set or this function is called before that period of time
   * ends, sources will not be cleared. This is useful for preventing sources
   * from being cleared on an unreliable network. Should only be called internally
   * by the source provider.
   *
   * @protected
   * @param {number} timeout - The period of time before clearing the sources
   * in milliseconds.
   * @param {function} callback - An optional callback. Called when sources
   * have been cleared.
   */
  clearSourcesWithTimeout(e, t) {
    clearTimeout(s(this, O)), h(this, O, setTimeout(() => {
      this.clearSources(t);
    }, e));
  }
  /**
   * Called when a source's value is modified by the user. This method
   * should be overridden by the child class to handle these updates.
   * This method should not be called directly.
   *
   * @protected
   * @param {string} key - The source's key. This is a string separated
   * by '/'.
   * @param {*} value - The source's updated value.
   */
  userUpdate(e, t) {
    this.updateSource(e, t);
  }
  /**
   * This optional method is called when a key is subscribed to that the store does not
   * already have. A SourceProvider can override this method to update the store with
   * the requested source.
   * @Override
   * @param {string} key
   */
  // eslint-disable-next-line class-methods-use-this, @typescript-eslint/no-empty-function
  requestSource(e) {
  }
  /**
   * Helper function to get the type of a variable represented
   * by a string.
   *
   * @param {*} value
   * @returns {string} - The value's type.
   */
  static getType(e) {
    return typeof e == "string" ? "string" : typeof e == "number" ? "number" : typeof e == "boolean" ? "boolean" : e instanceof Array ? "Array" : e === null ? "null" : null;
  }
  addClearSourcesHandler(e) {
    const t = Symbol("clearSources");
    return s(this, A).set(t, e), () => {
      s(this, A).delete(t);
    };
  }
  addSourcesChangedHandler(e) {
    const t = Symbol("sourcesChanged");
    return s(this, P).set(t, e), () => {
      s(this, P).delete(t);
    };
  }
  addSourcesRemovedHandler(e) {
    const t = Symbol("sourcesRemoved");
    return s(this, T).set(t, e), () => {
      s(this, T).delete(t);
    };
  }
  disconnect() {
    clearTimeout(s(this, m));
  }
}
m = /* @__PURE__ */ new WeakMap(), l = /* @__PURE__ */ new WeakMap(), O = /* @__PURE__ */ new WeakMap(), A = /* @__PURE__ */ new WeakMap(), P = /* @__PURE__ */ new WeakMap(), T = /* @__PURE__ */ new WeakMap(), y = /* @__PURE__ */ new WeakSet(), C = function(r = Ce) {
  if (Object.keys(s(this, l)).length === 0) {
    r();
    return;
  }
  const e = { ...s(this, l) };
  h(this, l, {});
  const t = {}, i = {};
  Object.entries(e).forEach(([o, u]) => {
    t[o] = u.first, typeof u.last < "u" && (i[o] = u.last);
  }), a(this, H, F).call(this, t), a(this, N, Y).call(this, t), Object.keys(i).length > 0 ? setTimeout(() => {
    a(this, H, F).call(this, i), a(this, N, Y).call(this, i), r();
  }) : r();
}, H = /* @__PURE__ */ new WeakSet(), F = function(r) {
  const e = {};
  Object.entries(r).forEach(([t, { type: i }]) => {
    i === "change" && (e[t] = r[t].value);
  }), Object.keys(e).length > 0 && s(this, P).forEach((t) => t(e));
}, N = /* @__PURE__ */ new WeakSet(), Y = function(r) {
  const e = [];
  Object.entries(r).forEach(([t, { type: i }]) => {
    i === "removal" && e.push(t);
  }), e.length > 0 && s(this, T).forEach((t) => t(e));
};
export {
  At as T,
  Ot as V
};
