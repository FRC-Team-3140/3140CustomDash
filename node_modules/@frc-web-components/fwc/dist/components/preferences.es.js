var z = (r) => {
  throw TypeError(r);
};
var S = (r, s, e) => s.has(r) || z("Cannot " + e);
var k = (r, s, e) => (S(r, s, "read from private field"), e ? e.call(r) : s.get(r)), m = (r, s, e) => s.has(r) ? z("Cannot add the same private member more than once") : s instanceof WeakSet ? s.add(r) : s.set(r, e), w = (r, s, e, o) => (S(r, s, "write to private field"), o ? o.call(r, e) : s.set(r, e), e), p = (r, s, e) => (S(r, s, "access private method"), e);
import { r as K, i as P, x as l, n as h } from "../property-C4BPH-wS.js";
import { n as L } from "../when-CDK1Tt5Y.js";
var U = Object.defineProperty, $ = (r, s, e, o) => {
  for (var i = void 0, t = r.length - 1, n; t >= 0; t--)
    (n = r[t]) && (i = n(s, e, i) || i);
  return i && U(s, e, i), i;
}, c, O, T, g, C;
const j = class j extends K {
  constructor() {
    super(...arguments);
    m(this, c);
    this.sourceRoot = "", this.preferences = {}, this.search = "", this.hideTitle = !1;
  }
  render() {
    return l`
      <div class="container">
        ${L(!this.hideTitle, () => l` <header>Preferences</header> `)}

        <div class="search-input">
          <input
            placeholder="Search..."
            .value=${this.search}
            @input=${(e) => {
      this.search = e.target.value, p(this, c, T).call(this);
    }}
          />
        </div>
        <div class="preferences-container">
          <div class="preferences">${p(this, c, C).call(this, this.preferences)}</div>
        </div>
      </div>
    `;
  }
};
c = new WeakSet(), O = function(e, o) {
  this.dispatchEvent(
    new CustomEvent("change", {
      detail: {
        property: e,
        value: o
      },
      bubbles: !0,
      composed: !0
    })
  );
}, T = function() {
  this.dispatchEvent(
    new CustomEvent("search", {
      detail: {
        search: this.search
      },
      bubbles: !0,
      composed: !0
    })
  );
}, g = function(e, o, i, t) {
  i[t] = o, p(this, c, O).call(this, e, o), this.requestUpdate();
}, C = function(e, o) {
  const i = Object.entries(e).filter(
    ([t, n]) => {
      const a = typeof o < "u" ? [o, t].join("/") : t;
      return t.startsWith(".") ? !1 : !this.search || typeof n == "object" ? !0 : a.toLowerCase().includes(this.search.toLowerCase());
    }
  );
  return l`
      ${i.map(([t, n]) => {
    const a = typeof o < "u" ? [o, t].join("/") : t;
    return typeof n == "boolean" ? l`
            <label title=${a}>${a}</label>
            <input
              type="checkbox"
              .checked=${n}
              @change=${(v) => {
      p(this, c, g).call(this, a, v.target.checked, e, t);
    }}
            />
          ` : typeof n == "number" ? l`
            <label title=${a}>${a}</label>
            <div class="number-input">
              <button
                @click=${() => {
      p(this, c, g).call(this, a, n - 1, e, t);
    }}
              >
                -
              </button>
              <input
                type="number"
                .value=${n}
                @change=${(v) => {
      p(this, c, g).call(this, a, parseFloat(v.target.value), e, t);
    }}
              />
              <button
                @click=${() => {
      p(this, c, g).call(this, a, n + 1, e, t);
    }}
              >
                +
              </button>
            </div>
          ` : typeof n == "string" ? l`
            <label title=${a}>${a}</label>
            <input
              type="text"
              .value=${n}
              @change=${(v) => {
      p(this, c, g).call(this, a, v.target.value, e, t);
    }}
            />
          ` : p(this, c, C).call(this, n, a);
  })}
    `;
}, j.styles = P`
    :host {
      display: inline-block;
      width: 250px;
      height: 250px;
      font-family: sans-serif;
    }

    .container {
      display: flex;
      flex-direction: column;
      gap: 3px;
      height: 100%;
      width: 100%;
    }

    header {
      background: var(--frc-preferences-header-background-color, lightblue);
      color: var(--frc-preferences-label-color, black);
      text-align: center;
      padding: 5px 3px;
      border-radius: 3px;
      margin: 0 3px;
      font-size: 15px;
    }

    .search-input {
      padding: 0 3px;
    }

    .preferences-container {
      flex: 1;
      overflow: auto;
      width: 100%;
      box-sizing: border-box;

      .preferences {
        padding: 3px;
        display: inline-grid;
        grid-template-columns: repeat(2, 1fr);
        column-gap: 8px;
        row-gap: 5px;
        align-items: center;
        justify-items: start;
        font-family: sans-serif;
        box-sizing: border-box;
      }
    }

    input::placeholder {
      color: var(--frc-preferences-placeholder-text-color, #888);
    }

    input:not([type='checkbox']) {
      width: 100%;
      border: none;
      outline: none;
      padding: 2px 4px;
      box-sizing: border-box;
      border-radius: 2px;
    }

    input[type='checkbox'] {
      width: 20px;
      height: 20px;
      appearance: none;
      -webkit-appearance: none;
      display: flex;
      align-content: center;
      justify-content: center;
      font-size: 2rem;
      padding: 0.1rem;
      border-radius: 3px;
    }

    input[type='checkbox']::before {
      content: ' ';
      /* https://yoksel.github.io/url-encoder/ */
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' height='24' viewBox='0 -960 960 960' width='24' style='&%2310; fill: white;&%2310;'%3E%3Cpath d='M382-218 130-470l75-75 177 177 375-375 75 75-450 450Z'/%3E%3C/svg%3E");
      width: 100%;
      background-size: 100% 100%;
      width: 100%;
      height: 100%;
      transform-origin: bottom left;
      transform: scale(0);
    }

    input[type='checkbox']:checked::before {
      transform: scale(1);
    }

    input[type='checkbox']:checked {
      background: #0c6ce9;
    }

    input {
      margin: 0;
      box-sizing: border-box;
      color: var(--frc-preferences-input-text-color, black);
      background: var(
        --frc-preferences-input-background-color,
        rgba(0, 0, 0, 0.1)
      );
    }

    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button {
      -webkit-appearance: none;
      margin: 0;
    }

    /* Firefox */
    input[type='number'] {
      -moz-appearance: textfield;
    }

    .number-input {
      display: flex;
      background: var(
        --frc-preferences-input-background-color,
        rgba(0, 0, 0, 0.1)
      );
      box-sizing: border-box;
      height: 20px;
      border-radius: 2px;

      button {
        padding: 0;
        height: 100%;
        width: 20px;
        border: none;
        cursor: pointer;
        background: none;
        line-height: 20px;
        font-size: 15px;
        color: var(--frc-preferences-input-button-text-color, #444);
      }

      input {
        flex: 1;
        background: none;
        text-align: center;
      }
    }

    label {
      color: var(--frc-preferences-label-color, black);
      text-overflow: ellipsis;
      overflow: hidden;
      white-space: nowrap;
      width: 100%;
    }
  `;
let b = j;
$([
  h({ type: String, attribute: "source-root" })
], b.prototype, "sourceRoot");
$([
  h({ type: Object })
], b.prototype, "preferences");
$([
  h({ type: String })
], b.prototype, "search");
$([
  h({ type: Boolean, attribute: "hide-title" })
], b.prototype, "hideTitle");
customElements.get("frc-preferences") || customElements.define("frc-preferences", b);
var q = Object.defineProperty, f = (r, s, e, o) => {
  for (var i = void 0, t = r.length - 1, n; t >= 0; t--)
    (n = r[t]) && (i = n(s, e, i) || i);
  return i && q(s, e, i), i;
};
const H = {
  dashboard: {
    displayName: "Preferences",
    defaultHtml: '<frc-preferences-wrapper source-key="/Preferences"></frc-preferences-wrapper>'
  },
  properties: {
    search: {
      type: "String"
    },
    hideTitle: {
      type: "Boolean",
      attribute: "hide-title"
    },
    source: { type: "Source", primary: !0, input: { type: "None" } },
    sourceKey: {
      type: "String",
      attribute: "source-key",
      input: { type: "None" }
    },
    store: { type: "Store", property: "store" },
    sourceProvider: {
      type: "String",
      attribute: "source-provider",
      input: { type: "None" }
    },
    provider: { type: "SourceProvider", property: "provider" }
  }
};
var y, x, d, _, B, N;
const E = class E extends K {
  constructor() {
    super(...arguments);
    m(this, d);
    m(this, y);
    m(this, x);
    this.search = "", this.hideTitle = !1, this.sourceKey = "", this.sourceProvider = "", w(this, y, {});
  }
  updated(e) {
    (e.has("sourceProvider") || e.has("sourceKey") || e.has("store")) && p(this, d, N).call(this);
  }
  disconnectedCallback() {
    var e;
    super.disconnectedCallback(), (e = k(this, x)) == null || e.call(this);
  }
  render() {
    return l`
      <frc-preferences
        @change=${(e) => p(this, d, _).call(this, e)}
        @search=${(e) => p(this, d, B).call(this, e)}
        source-root=${this.sourceKey}
        search=${this.search}
        ?hide-title=${this.hideTitle}
        .preferences=${k(this, y)}
      ></frc-preferences>
    `;
  }
};
y = new WeakMap(), x = new WeakMap(), d = new WeakSet(), _ = function(e) {
  var t;
  const { property: o, value: i } = e.detail;
  (t = this.provider) == null || t.userUpdate([this.sourceKey, o].join("/"), i);
}, B = function(e) {
  const { search: o } = e.detail;
  this.search = o;
}, N = function() {
  var e, o;
  (e = k(this, x)) == null || e.call(this), w(this, x, (o = this.store) == null ? void 0 : o.subscribe(
    this.sourceProvider,
    this.sourceKey,
    () => {
      var t;
      const i = (t = this.store) == null ? void 0 : t.getSource(
        this.sourceProvider,
        this.sourceKey
      );
      w(this, y, (i == null ? void 0 : i.getJson(!1)) ?? {}), this.requestUpdate();
    },
    !0
  ));
}, E.styles = P`
    :host {
      display: inline-block;
      width: 250px;
      height: 250px;
    }

    frc-preferences {
      width: 100%;
      height: 100%;
    }
  `;
let u = E;
f([
  h({ type: String })
], u.prototype, "search");
f([
  h({ type: Boolean, attribute: "hide-title" })
], u.prototype, "hideTitle");
f([
  h({ type: String, attribute: "source-key" })
], u.prototype, "sourceKey");
f([
  h({ type: String, attribute: "source-provider" })
], u.prototype, "sourceProvider");
f([
  h({ type: Object })
], u.prototype, "source");
f([
  h({ type: Object, attribute: !1 })
], u.prototype, "provider");
f([
  h({ type: Object, attribute: !1 })
], u.prototype, "store");
customElements.get("frc-preferences-wrapper") || customElements.define("frc-preferences-wrapper", u);
export {
  b as Preferences,
  u as PreferencesWrapper,
  H as preferencesDashboardConfig
};
