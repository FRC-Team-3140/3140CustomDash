import { r as h, i as f, x as r, n as o } from "../property-C4BPH-wS.js";
import { n as a } from "../when-CDK1Tt5Y.js";
import "../icon-Dc8f99z4.js";
var v = Object.defineProperty, l = (c, e, d, g) => {
  for (var i = void 0, s = c.length - 1, p; s >= 0; s--)
    (p = c[s]) && (i = p(e, d, i) || i);
  return i && v(e, d, i), i;
};
const u = {
  dashboard: {
    displayName: "Network Alerts"
  },
  properties: {
    errors: { type: "Array" },
    warnings: { type: "Array" },
    infos: { type: "Array" },
    level: {
      type: "String",
      defaultValue: "info",
      input: {
        type: "StringDropdown",
        allowCustomValues: !1,
        getOptions() {
          return ["error", "warning", "info"];
        }
      }
    },
    hideTitle: { type: "Boolean", attribute: "hide-title" }
  }
}, q = "m40-120 440-760 440 760H40Zm138-80h604L480-720 178-200Zm302-40q17 0 28.5-11.5T520-280q0-17-11.5-28.5T480-320q-17 0-28.5 11.5T440-280q0 17 11.5 28.5T480-240Zm-40-120h80v-200h-80v200Zm40-100Z", m = "M480-280q17 0 28.5-11.5T520-320q0-17-11.5-28.5T480-360q-17 0-28.5 11.5T440-320q0 17 11.5 28.5T480-280Zm-40-160h80v-240h-80v240Zm40 360q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z", T = "M440-280h80v-240h-80v240Zm40-320q17 0 28.5-11.5T520-640q0-17-11.5-28.5T480-680q-17 0-28.5 11.5T440-640q0 17 11.5 28.5T480-600Zm0 520q-83 0-156-31.5T197-197q-54-54-85.5-127T80-480q0-83 31.5-156T197-763q54-54 127-85.5T480-880q83 0 156 31.5T763-763q54 54 85.5 127T880-480q0 83-31.5 156T763-197q-54 54-127 85.5T480-80Zm0-80q134 0 227-93t93-227q0-134-93-227t-227-93q-134 0-227 93t-93 227q0 134 93 227t227 93Zm0-320Z", n = class n extends h {
  constructor() {
    super(...arguments), this.errors = [], this.warnings = [], this.infos = [], this.level = "info", this.hideTitle = !1;
  }
  render() {
    return r`
      <div class="alerts-container">
        ${a(!this.hideTitle, () => r` <header>Alerts</header> `)}
        <div class="alerts-list">
          ${this.errors.map(
      (e) => r`
              <div class="alert">
                <div class="icon">
                  <frc-icon
                    color="red"
                    svg-path=${m}
                    view-box="0 -960 960 960"
                  ></frc-icon>
                </div>
                <label>${e}</label>
              </div>
            `
    )}
          ${a(
      this.level !== "error",
      () => r`
              ${this.warnings.map(
        (e) => r`
                  <div class="alert">
                    <div class="icon">
                      <frc-icon
                        color="yellow"
                        svg-path=${q}
                        view-box="0 -960 960 960"
                      ></frc-icon>
                    </div>
                    <label>${e}</label>
                  </div>
                `
      )}
            `
    )}
          ${a(
      this.level === "info",
      () => r`
              ${this.infos.map(
        (e) => r`
                  <div class="alert">
                    <div class="icon">
                      <frc-icon
                        color="green"
                        svg-path=${T}
                        view-box="0 -960 960 960"
                      ></frc-icon>
                    </div>
                    <label>${e}</label>
                  </div>
                `
      )}
            `
    )}
        </div>
      </div>
    `;
  }
};
n.styles = f`
    :host {
      font-family: sans-serif;
      display: inline-block;
      width: 300px;
      height: auto;
      box-sizing: border-box;
      color: var(--frc-network-alerts-text-color, black);
    }

    .alerts-container {
      display: flex;
      flex-direction: column;
      width: 100%;
      height: 100%;
    }

    header {
      background: var(--frc-network-alerts-header-color, lightblue);
      padding: 10px 0;
      text-align: center;
      font-weight: bold;
    }

    .alerts-list {
      padding: 8px 5px;
      box-sizing: border-box;
      display: flex;
      flex-direction: column;
      gap: 9px;
      flex: 1;
      overflow-y: auto;
    }

    .alert {
      display: flex;
      align-items: center;
      gap: 9px;
    }

    .icon {
      width: 24px;
      height: 24px;
    }

    .alert label {
      flex: 1;
    }

    .icon frc-icon {
      width: 100%;
      height: 100%;
    }
  `;
let t = n;
l([
  o({ type: Array })
], t.prototype, "errors");
l([
  o({ type: Array })
], t.prototype, "warnings");
l([
  o({ type: Array })
], t.prototype, "infos");
l([
  o({ type: String })
], t.prototype, "level");
l([
  o({ type: Boolean, attribute: "hide-title" })
], t.prototype, "hideTitle");
customElements.get("frc-network-alerts") || customElements.define("frc-network-alerts", t);
export {
  t as NetworkAlerts,
  t as default,
  u as networkAlertsDashboardConfig
};
