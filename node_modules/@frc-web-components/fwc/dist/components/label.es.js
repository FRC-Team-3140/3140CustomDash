import { r as f, i as u, x as d, n as o } from "../property-C4BPH-wS.js";
var b = Object.defineProperty, y = (n, t, r, h) => {
  for (var e = void 0, i = n.length - 1, s; i >= 0; i--)
    (s = n[i]) && (e = s(t, r, e) || e);
  return e && b(t, r, e), e;
};
const x = {
  dashboard: {
    displayName: "Label",
    defaultHtml: '<frc-label text="label"></frc-label>'
  },
  properties: {
    text: { type: "String", primary: !0 }
  }
}, p = class p extends f {
  constructor() {
    super(...arguments), this.text = "";
  }
  render() {
    return d`${this.text}`;
  }
};
p.styles = u`
    :host {
      display: inline;
      font-size: inherit;
      font-family: inherit;
      font-weight: inherit;
      text-align: inherit;
      margin: 0;
      padding: 0;
      color: var(--frc-label-text-color, black);
    }
  `;
let l = p;
y([
  o({ type: String })
], l.prototype, "text");
customElements.get("frc-label") || customElements.define("frc-label", l);
var v = Object.defineProperty, m = (n, t, r, h) => {
  for (var e = void 0, i = n.length - 1, s; i >= 0; i--)
    (s = n[i]) && (e = s(t, r, e) || e);
  return e && v(t, r, e), e;
};
const _ = {
  dashboard: {
    displayName: "Number Label"
  },
  properties: {
    value: { type: "Number", primary: !0 },
    precision: { type: "Number", defaultValue: 2 }
  }
}, c = class c extends f {
  constructor() {
    super(...arguments), this.value = 0, this.precision = 2;
  }
  render() {
    const t = Math.max(0, this.precision), r = this.value.toFixed(t);
    return d`${r}`;
  }
};
c.styles = u`
    :host {
      display: inline;
      font-size: inherit;
      font-family: inherit;
      font-weight: inherit;
      text-align: inherit;
      margin: 0;
      padding: 0;
      color: var(--frc-label-text-color, black);
    }
  `;
let a = c;
m([
  o({ type: Number })
], a.prototype, "value");
m([
  o({ type: Number })
], a.prototype, "precision");
customElements.get("frc-number-label") || customElements.define("frc-number-label", a);
export {
  l as Label,
  a as NumberLabel,
  x as labelDashboardConfig,
  _ as numberLabelDashboardConfig
};
