import { r as d, i as c, x as u, n as l } from "../property-C4BPH-wS.js";
var b = Object.defineProperty, r = (n, s, a, f) => {
  for (var t = void 0, o = n.length - 1, g; o >= 0; o--)
    (g = n[o]) && (t = g(s, a, t) || t);
  return t && b(s, a, t), t;
};
const h = {
  dashboard: {
    displayName: "Toggle Button"
  },
  properties: {
    toggled: {
      type: "Boolean",
      defaultValue: !1,
      primary: !0,
      changeEvent: "toggle"
    },
    label: { type: "String", defaultValue: "Button" }
  }
}, i = class i extends d {
  constructor() {
    super(...arguments), this.toggled = !1, this.disabled = !1, this.label = "Button";
  }
  onClick() {
    this.disabled || (this.toggled = !this.toggled, this.dispatchEvent(
      new CustomEvent("toggle", {
        detail: {
          toggled: this.toggled
        },
        bubbles: !0,
        composed: !0
      })
    ));
  }
  render() {
    return u`
      <button class="${this.toggled ? "toggled" : ""}" @click="${this.onClick}">
        ${this.label}
      </button>
    `;
  }
};
i.styles = c`
    :host {
      display: inline-block;
      width: 100px;
      height: 50px;
      font-family: sans-serif;
      font-size: 16px;
      letter-spacing: 0.5px;
    }

    button {
      width: 100%;
      height: 100%;
      margin: 0;
      border: none;
      border-radius: 4px;
      font-size: inherit;
      font-family: inherit;
      letter-spacing: inherit;
      background: var(--frc-button-background-color, rgb(230, 230, 230));
      color: var(--frc-button-text-color, black);
    }

    .toggled {
      background: var(--frc-button-toggled-background-color, black);
      color: var(--frc-button-toggled-text-color, white);
      font-weight: bold;
    }
  `;
let e = i;
r([
  l({ type: Boolean })
], e.prototype, "toggled");
r([
  l({ type: Boolean })
], e.prototype, "disabled");
r([
  l({ type: String })
], e.prototype, "label");
customElements.get("frc-toggle-button") || customElements.define("frc-toggle-button", e);
export {
  e as ToggleButton,
  e as default,
  h as toggleButtonDashboardConfig
};
