import { LitElement } from 'lit';
import { Group, Object3D } from 'three';
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';
import { Pose3d, Rotation2d, Rotation3d, Translation3d, Translation2d, ObjectConfig, IField3d } from './field-interfaces';
export default class Object3d extends LitElement {
    objectConfigs: ObjectConfig[];
    name: string;
    pose: number[];
    translation?: Translation3d | Translation2d;
    rotation?: Rotation3d | Rotation2d;
    _translation: Translation3d | Translation2d;
    _rotation: Rotation3d | Rotation2d;
    loader: GLTFLoader;
    group: Group;
    object?: Object3D;
    getObjectConfig(): ObjectConfig;
    getField(): IField3d | undefined;
    static adjustMaterials(group: Group): void;
    static updatePose(object: Object3D, pose: Pose3d): void;
    loadRobotModel(): void;
    firstUpdated(): void;
    updated(changedProps: Map<string, unknown>): void;
    updateObjectConfigs(): void;
    renderObject(): void;
}
declare global {
    interface HTMLElementTagNameMap {
        'frc-field3d-object': Object3d;
    }
}
