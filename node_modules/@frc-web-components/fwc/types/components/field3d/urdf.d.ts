import { LitElement, TemplateResult } from 'lit';
import { Scene, WebGLRenderer, PerspectiveCamera, Object3D, Group, Camera } from 'three';
import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';
import { UrdfConfig } from './field-interfaces';
export default class Urdf extends LitElement {
    #private;
    urdfConfigs: UrdfConfig[];
    name: string;
    backgroundColor: string;
    enableVR: boolean;
    assetPathPrefix?: string;
    angles: Record<string, number>;
    scene: Scene;
    renderer?: WebGLRenderer;
    camera: PerspectiveCamera;
    controls: OrbitControls;
    canvas: HTMLCanvasElement;
    container: HTMLCanvasElement;
    private vrButton;
    group: Group;
    object?: Object3D;
    robot?: Object3D;
    static styles: import('lit').CSSResult;
    private getCamera;
    static getOrbitControls(camera: Camera, canvas: HTMLElement): OrbitControls;
    static addLights(scene: Scene): void;
    private initRenderer;
    private updateCanvasSize;
    firstUpdated(): void;
    getUrdfConfig(): UrdfConfig;
    updateAngles(): void;
    loadRobotModel(): void;
    updated(changedProps: Map<string, unknown>): void;
    renderField(): void;
    connectedCallback(): void;
    disconnectedCallback(): void;
    render(): TemplateResult;
}
declare global {
    interface HTMLElementTagNameMap {
        'frc-urdf': Urdf;
    }
}
