import { LitElement, TemplateResult } from 'lit';
import { FieldConfig } from './field-configs';
import { CropType } from './field-interfaces';
export declare class Field extends LitElement {
    #private;
    game: string;
    cropTop: number | null;
    cropBottom: number | null;
    cropLeft: number | null;
    cropRight: number | null;
    cropType: CropType;
    unit: string;
    rotationUnit: 'deg' | 'rad';
    rotation: number;
    showGrid: boolean;
    gridSize: number;
    origin: 'red' | 'blue';
    canvas: HTMLCanvasElement;
    container: HTMLElement;
    static styles: import('lit').CSSResult;
    getConfig(): FieldConfig;
    getCanvasCtx(): CanvasRenderingContext2D;
    getCropPercent(): {
        x1: number;
        y1: number;
        x2: number;
        y2: number;
    };
    getFieldRectPx(): {
        x: number;
        y: number;
        width: number;
        height: number;
    };
    pxToX(px: number, unit?: string): number;
    xToPx(xUnits: number, unit?: string): number;
    yToPx(yUnits: number, unit?: string): number;
    pxToY(px: number, unit?: string): number;
    lengthToPx(length: number, unit?: string): number;
    setContainerSize(): void;
    drawImage(): void;
    drawFieldRect(): void;
    drawGrid(): void;
    drawChildren(): void;
    drawField(): void;
    firstUpdated(): void;
    render(): TemplateResult;
}
export default Field;
declare global {
    interface HTMLElementTagNameMap {
        'frc-field': Field;
    }
}
