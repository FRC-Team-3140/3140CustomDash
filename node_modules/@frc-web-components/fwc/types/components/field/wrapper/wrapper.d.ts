import { LitElement } from 'lit';
import { default as Store, SourceProvider } from '@webbitjs/store';
import { WebbitConfig } from '@webbitjs/webbit';
import { FieldObject } from './field-object-manager';
import { CropType } from '../field-interfaces';
export declare const fieldPathDashboardConfig: Partial<WebbitConfig>;
export declare const fieldRobotDashboardConfig: Partial<WebbitConfig>;
export declare const fieldDashboardConfig: Partial<WebbitConfig>;
export declare class FieldWrapper extends LitElement {
    #private;
    provider?: SourceProvider;
    store?: Store;
    sourceProvider: string;
    sourceKey: string;
    game: string;
    cropTop: number;
    cropBottom: number;
    cropLeft: number;
    cropRight: number;
    cropType: CropType;
    unit: string;
    rotationUnit: 'deg' | 'rad';
    rotation: number;
    showGrid: boolean;
    gridSize: number;
    origin: 'red' | 'blue';
    fieldObjects: FieldObject[];
    slottedFieldObjects?: HTMLSlotElement;
    private fieldObjectManager;
    static styles: import('lit').CSSResult;
    protected firstUpdated(): void;
    disconnectedCallback(): void;
    protected updated(changedProperties: Map<string, any>): void;
    render(): import('lit').TemplateResult<1>;
}
declare global {
    interface HTMLElementTagNameMap {
        'frc-field-wrapper': FieldWrapper;
    }
}
