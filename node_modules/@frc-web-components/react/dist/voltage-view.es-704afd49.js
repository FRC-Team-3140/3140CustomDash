import { U as m, M as e } from "./property-C4BPH-wS-7fb0a59c.js";
import { t as c } from "./number-bar.es-14bfc169.js";
var y = Object.getPrototypeOf, l = Reflect.get, f = (p, i, s) => l(y(p), s, i), v = Object.defineProperty, r = (p, i, s, b) => {
  for (var o = void 0, u = p.length - 1, n; u >= 0; u--)
    (n = p[u]) && (o = n(i, s, o) || o);
  return o && v(i, s, o), o;
};
const a = class extends c {
  constructor() {
    super(...arguments), this.value = 0, this.min = 0, this.max = 5, this.center = 0, this.precision = 2, this.hideText = !1, this.numTickMarks = 3, this.unit = "V";
  }
};
a.styles = [
  ...f(a, a, "styles"),
  m`
      [part='bar']::part(foreground) {
        background: var(--frc-voltage-view-foreground-color, #ffbd2f);
      }
    `
];
let t = a;
r([
  e({ type: Number })
], t.prototype, "value");
r([
  e({ type: Number })
], t.prototype, "min");
r([
  e({ type: Number })
], t.prototype, "max");
r([
  e({ type: Number })
], t.prototype, "center");
r([
  e({ type: Number })
], t.prototype, "precision");
r([
  e({ type: Boolean, attribute: "hide-text" })
], t.prototype, "hideText");
r([
  e({ type: Number, attribute: "num-tick-marks" })
], t.prototype, "numTickMarks");
r([
  e({ type: String })
], t.prototype, "unit");
customElements.get("frc-voltage-view") || customElements.define("frc-voltage-view", t);
export {
  t as e
};
