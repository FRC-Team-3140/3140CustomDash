import c from "react";
import { U as m, M as a, H as p, O as f, o as h } from "../property-C4BPH-wS-7fb0a59c.js";
var y = Object.defineProperty, v = (e, r, n, g) => {
  for (var t = void 0, i = e.length - 1, l; i >= 0; i--)
    (l = e[i]) && (t = l(r, n, t) || t);
  return t && y(r, n, t), t;
};
const u = class extends p {
  constructor() {
    super(...arguments), this.text = "";
  }
  render() {
    return f`${this.text}`;
  }
};
u.styles = m`
    :host {
      display: inline;
      font-size: inherit;
      font-family: inherit;
      font-weight: inherit;
      text-align: inherit;
      margin: 0;
      padding: 0;
      color: var(--frc-label-text-color, black);
    }
  `;
let s = u;
v([
  a({ type: String })
], s.prototype, "text");
customElements.get("frc-label") || customElements.define("frc-label", s);
var x = Object.defineProperty, b = (e, r, n, g) => {
  for (var t = void 0, i = e.length - 1, l; i >= 0; i--)
    (l = e[i]) && (t = l(r, n, t) || t);
  return t && x(r, n, t), t;
};
const d = class extends p {
  constructor() {
    super(...arguments), this.value = 0, this.precision = 2;
  }
  render() {
    const r = Math.max(0, this.precision), n = this.value.toFixed(r);
    return f`${n}`;
  }
};
d.styles = m`
    :host {
      display: inline;
      font-size: inherit;
      font-family: inherit;
      font-weight: inherit;
      text-align: inherit;
      margin: 0;
      padding: 0;
      color: var(--frc-label-text-color, black);
    }
  `;
let o = d;
b([
  a({ type: Number })
], o.prototype, "value");
b([
  a({ type: Number })
], o.prototype, "precision");
customElements.get("frc-number-label") || customElements.define("frc-number-label", o);
const j = h({
  tagName: "frc-label",
  elementClass: s,
  react: c
}), k = h({
  tagName: "frc-number-label",
  elementClass: o,
  react: c
});
export {
  j as Label,
  k as NumberLabel
};
