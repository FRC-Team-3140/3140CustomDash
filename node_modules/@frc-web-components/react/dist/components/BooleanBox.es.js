import f from "react";
import { U as u, M as s, H as x, O as b, o as h } from "../property-C4BPH-wS-7fb0a59c.js";
var y = Object.defineProperty, n = (r, l, a, p) => {
  for (var e = void 0, i = r.length - 1, c; i >= 0; i--)
    (c = r[i]) && (e = c(l, a, e) || e);
  return e && y(l, a, e), e;
}, t;
const o = (t = class extends x {
  constructor() {
    super(...arguments), this.value = !1, this.falseColor = t.DEFAULT_FALSE_COLOR, this.trueColor = t.DEFAULT_TRUE_COLOR, this.label = "";
  }
  updated() {
    const r = this.falseColor || t.DEFAULT_FALSE_COLOR, l = this.trueColor || t.DEFAULT_TRUE_COLOR, a = this.renderRoot.querySelector(
      "[part=box]"
    ), p = this.value ? l : r;
    a.style.setProperty("--box-color", p);
  }
  render() {
    return b` <div part="box">${this.label || b`&nbsp;`}</div> `;
  }
}, t.DEFAULT_FALSE_COLOR = "#ff0000", t.DEFAULT_TRUE_COLOR = "#00ff00", t.styles = u`
    :host {
      display: inline-block;
      width: 80px;
      height: 80px;
      padding: 5px;
      box-sizing: border-box;
    }

    [part='box'] {
      width: 100%;
      height: 100%;
      display: flex;
      justify-content: center;
      align-content: center;
      flex-wrap: wrap;
      background-color: var(--box-color);
      text-align: center;
    }
  `, t);
n([
  s({ type: Boolean })
], o.prototype, "value");
n([
  s({ type: String, attribute: "false-color" })
], o.prototype, "falseColor");
n([
  s({ type: String, attribute: "true-color" })
], o.prototype, "trueColor");
n([
  s({ type: String })
], o.prototype, "label");
let d = o;
customElements.get("frc-boolean-box") || customElements.define("frc-boolean-box", d);
const g = h({
  tagName: "frc-boolean-box",
  elementClass: d,
  react: f
});
export {
  g as BooleanBox,
  g as default
};
