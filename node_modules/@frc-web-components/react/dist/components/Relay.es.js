import d from "react";
import { U as f, M as i, H as u, O as v, o as m } from "../property-C4BPH-wS-7fb0a59c.js";
import "../toggle-group.es-ea37bfc7.js";
var l = (e) => {
  throw TypeError(e);
}, y = (e, t, r) => t.has(e) || l("Cannot " + r), O = (e, t, r) => t.has(e) ? l("Cannot add the same private member more than once") : t instanceof WeakSet ? t.add(e) : t.set(e, r), w = (e, t, r) => (y(e, t, "access private method"), r), x = Object.defineProperty, h = (e, t, r, S) => {
  for (var a = void 0, n = e.length - 1, c; n >= 0; n--)
    (c = e[n]) && (a = c(t, r, a) || a);
  return a && x(t, r, a), a;
};
const $ = ["Off", "On", "Forward", "Reverse"];
var s, p;
const g = class extends u {
  constructor() {
    super(...arguments), O(this, s), this.value = "Off", this.direction = "vertical";
  }
  render() {
    return v`
      <frc-toggle-group
        @change=${w(this, s, p)}
        .options=${$}
        value=${this.value}
        direction=${this.direction}
      ></frc-toggle-group>
    `;
  }
};
s = /* @__PURE__ */ new WeakSet(), p = function(e) {
  this.value = e.detail.value;
}, g.styles = f`
    :host {
      display: inline-block;
      width: 150px;
      height: 300px;
    }

    frc-toggle-group {
      width: 100%;
      height: 100%;
    }
  `;
let o = g;
h([
  i({ type: String })
], o.prototype, "value");
h([
  i({ type: String })
], o.prototype, "direction");
customElements.get("frc-relay") || customElements.define("frc-relay", o);
const R = m({
  tagName: "frc-relay",
  elementClass: o,
  react: d,
  events: {
    onchange: "change"
  }
});
export {
  R as Relay,
  R as default
};
