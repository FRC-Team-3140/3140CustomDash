import i from "react";
import { U as p, M as l, H as m, O as b, o as f } from "../property-C4BPH-wS-7fb0a59c.js";
var u = Object.defineProperty, c = (t, a, s, g) => {
  for (var e = void 0, o = t.length - 1, n; o >= 0; o--)
    (n = t[o]) && (e = n(a, s, e) || e);
  return e && u(a, s, e), e;
};
const d = class extends m {
  constructor() {
    super(...arguments), this.distance = 0, this.speed = 0;
  }
  render() {
    return b`
      <label class="distance-label">Distance</label>
      <span>${this.distance}</span>
      <label class="speed-label">Speed</label>
      <span>${this.speed}</span>
    `;
  }
};
d.styles = p`
    :host {
      display: inline-grid;
      grid-template-columns: min-content auto;
      grid-template-rows: 50% 50%;
      column-gap: 15px;
      row-gap: 5px;
      align-items: center;
      width: 250px;
      font-family: sans-serif;
    }

    label {
      font-weight: bold;
      text-align: right;
      color: var(--frc-encoder-label-color, #000);
    }

    span {
      width: 100%;
      min-width: 50px;
      display: inline-block;
      padding: 5px;
      border: 1px dashed;
      border-color: var(--frc-encoder-value-color, #666);
      color: var(--frc-encoder-value-color, #666);
      border-radius: 3px;
      box-sizing: border-box;
    }
  `;
let r = d;
c([
  l({ type: Number })
], r.prototype, "distance");
c([
  l({ type: Number })
], r.prototype, "speed");
customElements.get("frc-encoder") || customElements.define("frc-encoder", r);
const v = f({
  tagName: "frc-encoder",
  elementClass: r,
  react: i
});
export {
  v as Encoder,
  v as default
};
