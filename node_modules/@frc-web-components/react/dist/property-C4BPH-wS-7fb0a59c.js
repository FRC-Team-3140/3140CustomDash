/**
 * @license
 * Copyright 2018 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
const ct = /* @__PURE__ */ new Set(["children", "localName", "ref", "style", "className"]), B = /* @__PURE__ */ new WeakMap(), I = (e, t, s, i, n) => {
  const r = n == null ? void 0 : n[t];
  r === void 0 ? (e[t] = s, s == null && t in HTMLElement.prototype && e.removeAttribute(t)) : s !== i && ((o, h, l) => {
    let a = B.get(o);
    a === void 0 && B.set(o, a = /* @__PURE__ */ new Map());
    let c = a.get(h);
    l !== void 0 ? c === void 0 ? (a.set(h, c = { handleEvent: l }), o.addEventListener(h, c)) : c.handleEvent = l : c !== void 0 && (a.delete(h), o.removeEventListener(h, c));
  })(e, r, s);
}, xt = ({ react: e, tagName: t, elementClass: s, events: i, displayName: n }) => {
  const r = new Set(Object.keys(i ?? {})), o = e.forwardRef((h, l) => {
    const a = e.useRef(/* @__PURE__ */ new Map()), c = e.useRef(null), d = {}, _ = {};
    for (const [u, $] of Object.entries(h))
      ct.has(u) ? d[u === "className" ? "class" : u] = $ : r.has(u) || u in s.prototype ? _[u] = $ : d[u] = $;
    return e.useLayoutEffect(() => {
      if (c.current === null)
        return;
      const u = /* @__PURE__ */ new Map();
      for (const $ in _)
        I(c.current, $, h[$], a.current.get($), i), a.current.delete($), u.set($, h[$]);
      for (const [$, at] of a.current)
        I(c.current, $, void 0, at, i);
      a.current = u;
    }), e.useLayoutEffect(() => {
      var u;
      (u = c.current) == null || u.removeAttribute("defer-hydration");
    }, []), d.suppressHydrationWarning = !0, e.createElement(t, { ...d, ref: e.useCallback((u) => {
      c.current = u, typeof l == "function" ? l(u) : l !== null && (l.current = u);
    }, [l]) });
  });
  return o.displayName = n ?? s.name, o;
};
/**
 * @license
 * Copyright 2019 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
const T = globalThis, L = T.ShadowRoot && (T.ShadyCSS === void 0 || T.ShadyCSS.nativeShadow) && "adoptedStyleSheets" in Document.prototype && "replace" in CSSStyleSheet.prototype, j = Symbol(), V = /* @__PURE__ */ new WeakMap();
let it = class {
  constructor(e, t, s) {
    if (this._$cssResult$ = !0, s !== j)
      throw Error("CSSResult is not constructable. Use `unsafeCSS` or `css` instead.");
    this.cssText = e, this.t = t;
  }
  get styleSheet() {
    let e = this.o;
    const t = this.t;
    if (L && e === void 0) {
      const s = t !== void 0 && t.length === 1;
      s && (e = V.get(t)), e === void 0 && ((this.o = e = new CSSStyleSheet()).replaceSync(this.cssText), s && V.set(t, e));
    }
    return e;
  }
  toString() {
    return this.cssText;
  }
};
const dt = (e) => new it(typeof e == "string" ? e : e + "", void 0, j), Mt = (e, ...t) => {
  const s = e.length === 1 ? e[0] : t.reduce((i, n, r) => i + ((o) => {
    if (o._$cssResult$ === !0)
      return o.cssText;
    if (typeof o == "number")
      return o;
    throw Error("Value passed to 'css' function must be a 'css' function result: " + o + ". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.");
  })(n) + e[r + 1], e[0]);
  return new it(s, e, j);
}, ut = (e, t) => {
  if (L)
    e.adoptedStyleSheets = t.map((s) => s instanceof CSSStyleSheet ? s : s.styleSheet);
  else
    for (const s of t) {
      const i = document.createElement("style"), n = T.litNonce;
      n !== void 0 && i.setAttribute("nonce", n), i.textContent = s.cssText, e.appendChild(i);
    }
}, W = L ? (e) => e : (e) => e instanceof CSSStyleSheet ? ((t) => {
  let s = "";
  for (const i of t.cssRules)
    s += i.cssText;
  return dt(s);
})(e) : e;
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
const { is: pt, defineProperty: $t, getOwnPropertyDescriptor: _t, getOwnPropertyNames: ft, getOwnPropertySymbols: vt, getPrototypeOf: mt } = Object, g = globalThis, q = g.trustedTypes, At = q ? q.emptyScript : "", J = g.reactiveElementPolyfillSupport, w = (e, t) => e, M = { toAttribute(e, t) {
  switch (t) {
    case Boolean:
      e = e ? At : null;
      break;
    case Object:
    case Array:
      e = e == null ? e : JSON.stringify(e);
  }
  return e;
}, fromAttribute(e, t) {
  let s = e;
  switch (t) {
    case Boolean:
      s = e !== null;
      break;
    case Number:
      s = e === null ? null : Number(e);
      break;
    case Object:
    case Array:
      try {
        s = JSON.parse(e);
      } catch {
        s = null;
      }
  }
  return s;
} }, z = (e, t) => !pt(e, t), K = { attribute: !0, type: String, converter: M, reflect: !1, hasChanged: z };
Symbol.metadata ?? (Symbol.metadata = Symbol("metadata")), g.litPropertyMetadata ?? (g.litPropertyMetadata = /* @__PURE__ */ new WeakMap());
let y = class extends HTMLElement {
  static addInitializer(e) {
    this._$Ei(), (this.l ?? (this.l = [])).push(e);
  }
  static get observedAttributes() {
    return this.finalize(), this._$Eh && [...this._$Eh.keys()];
  }
  static createProperty(e, t = K) {
    if (t.state && (t.attribute = !1), this._$Ei(), this.elementProperties.set(e, t), !t.noAccessor) {
      const s = Symbol(), i = this.getPropertyDescriptor(e, s, t);
      i !== void 0 && $t(this.prototype, e, i);
    }
  }
  static getPropertyDescriptor(e, t, s) {
    const { get: i, set: n } = _t(this.prototype, e) ?? { get() {
      return this[t];
    }, set(r) {
      this[t] = r;
    } };
    return { get() {
      return i == null ? void 0 : i.call(this);
    }, set(r) {
      const o = i == null ? void 0 : i.call(this);
      n.call(this, r), this.requestUpdate(e, o, s);
    }, configurable: !0, enumerable: !0 };
  }
  static getPropertyOptions(e) {
    return this.elementProperties.get(e) ?? K;
  }
  static _$Ei() {
    if (this.hasOwnProperty(w("elementProperties")))
      return;
    const e = mt(this);
    e.finalize(), e.l !== void 0 && (this.l = [...e.l]), this.elementProperties = new Map(e.elementProperties);
  }
  static finalize() {
    if (this.hasOwnProperty(w("finalized")))
      return;
    if (this.finalized = !0, this._$Ei(), this.hasOwnProperty(w("properties"))) {
      const t = this.properties, s = [...ft(t), ...vt(t)];
      for (const i of s)
        this.createProperty(i, t[i]);
    }
    const e = this[Symbol.metadata];
    if (e !== null) {
      const t = litPropertyMetadata.get(e);
      if (t !== void 0)
        for (const [s, i] of t)
          this.elementProperties.set(s, i);
    }
    this._$Eh = /* @__PURE__ */ new Map();
    for (const [t, s] of this.elementProperties) {
      const i = this._$Eu(t, s);
      i !== void 0 && this._$Eh.set(i, t);
    }
    this.elementStyles = this.finalizeStyles(this.styles);
  }
  static finalizeStyles(e) {
    const t = [];
    if (Array.isArray(e)) {
      const s = new Set(e.flat(1 / 0).reverse());
      for (const i of s)
        t.unshift(W(i));
    } else
      e !== void 0 && t.push(W(e));
    return t;
  }
  static _$Eu(e, t) {
    const s = t.attribute;
    return s === !1 ? void 0 : typeof s == "string" ? s : typeof e == "string" ? e.toLowerCase() : void 0;
  }
  constructor() {
    super(), this._$Ep = void 0, this.isUpdatePending = !1, this.hasUpdated = !1, this._$Em = null, this._$Ev();
  }
  _$Ev() {
    var e;
    this._$ES = new Promise((t) => this.enableUpdating = t), this._$AL = /* @__PURE__ */ new Map(), this._$E_(), this.requestUpdate(), (e = this.constructor.l) == null || e.forEach((t) => t(this));
  }
  addController(e) {
    var t;
    (this._$EO ?? (this._$EO = /* @__PURE__ */ new Set())).add(e), this.renderRoot !== void 0 && this.isConnected && ((t = e.hostConnected) == null || t.call(e));
  }
  removeController(e) {
    var t;
    (t = this._$EO) == null || t.delete(e);
  }
  _$E_() {
    const e = /* @__PURE__ */ new Map(), t = this.constructor.elementProperties;
    for (const s of t.keys())
      this.hasOwnProperty(s) && (e.set(s, this[s]), delete this[s]);
    e.size > 0 && (this._$Ep = e);
  }
  createRenderRoot() {
    const e = this.shadowRoot ?? this.attachShadow(this.constructor.shadowRootOptions);
    return ut(e, this.constructor.elementStyles), e;
  }
  connectedCallback() {
    var e;
    this.renderRoot ?? (this.renderRoot = this.createRenderRoot()), this.enableUpdating(!0), (e = this._$EO) == null || e.forEach((t) => {
      var s;
      return (s = t.hostConnected) == null ? void 0 : s.call(t);
    });
  }
  enableUpdating(e) {
  }
  disconnectedCallback() {
    var e;
    (e = this._$EO) == null || e.forEach((t) => {
      var s;
      return (s = t.hostDisconnected) == null ? void 0 : s.call(t);
    });
  }
  attributeChangedCallback(e, t, s) {
    this._$AK(e, s);
  }
  _$EC(e, t) {
    var s;
    const i = this.constructor.elementProperties.get(e), n = this.constructor._$Eu(e, i);
    if (n !== void 0 && i.reflect === !0) {
      const r = (((s = i.converter) == null ? void 0 : s.toAttribute) !== void 0 ? i.converter : M).toAttribute(t, i.type);
      this._$Em = e, r == null ? this.removeAttribute(n) : this.setAttribute(n, r), this._$Em = null;
    }
  }
  _$AK(e, t) {
    var s;
    const i = this.constructor, n = i._$Eh.get(e);
    if (n !== void 0 && this._$Em !== n) {
      const r = i.getPropertyOptions(n), o = typeof r.converter == "function" ? { fromAttribute: r.converter } : ((s = r.converter) == null ? void 0 : s.fromAttribute) !== void 0 ? r.converter : M;
      this._$Em = n, this[n] = o.fromAttribute(t, r.type), this._$Em = null;
    }
  }
  requestUpdate(e, t, s) {
    if (e !== void 0) {
      if (s ?? (s = this.constructor.getPropertyOptions(e)), !(s.hasChanged ?? z)(this[e], t))
        return;
      this.P(e, t, s);
    }
    this.isUpdatePending === !1 && (this._$ES = this._$ET());
  }
  P(e, t, s) {
    this._$AL.has(e) || this._$AL.set(e, t), s.reflect === !0 && this._$Em !== e && (this._$Ej ?? (this._$Ej = /* @__PURE__ */ new Set())).add(e);
  }
  async _$ET() {
    this.isUpdatePending = !0;
    try {
      await this._$ES;
    } catch (t) {
      Promise.reject(t);
    }
    const e = this.scheduleUpdate();
    return e != null && await e, !this.isUpdatePending;
  }
  scheduleUpdate() {
    return this.performUpdate();
  }
  performUpdate() {
    var e;
    if (!this.isUpdatePending)
      return;
    if (!this.hasUpdated) {
      if (this.renderRoot ?? (this.renderRoot = this.createRenderRoot()), this._$Ep) {
        for (const [n, r] of this._$Ep)
          this[n] = r;
        this._$Ep = void 0;
      }
      const i = this.constructor.elementProperties;
      if (i.size > 0)
        for (const [n, r] of i)
          r.wrapped !== !0 || this._$AL.has(n) || this[n] === void 0 || this.P(n, this[n], r);
    }
    let t = !1;
    const s = this._$AL;
    try {
      t = this.shouldUpdate(s), t ? (this.willUpdate(s), (e = this._$EO) == null || e.forEach((i) => {
        var n;
        return (n = i.hostUpdate) == null ? void 0 : n.call(i);
      }), this.update(s)) : this._$EU();
    } catch (i) {
      throw t = !1, this._$EU(), i;
    }
    t && this._$AE(s);
  }
  willUpdate(e) {
  }
  _$AE(e) {
    var t;
    (t = this._$EO) == null || t.forEach((s) => {
      var i;
      return (i = s.hostUpdated) == null ? void 0 : i.call(s);
    }), this.hasUpdated || (this.hasUpdated = !0, this.firstUpdated(e)), this.updated(e);
  }
  _$EU() {
    this._$AL = /* @__PURE__ */ new Map(), this.isUpdatePending = !1;
  }
  get updateComplete() {
    return this.getUpdateComplete();
  }
  getUpdateComplete() {
    return this._$ES;
  }
  shouldUpdate(e) {
    return !0;
  }
  update(e) {
    this._$Ej && (this._$Ej = this._$Ej.forEach((t) => this._$EC(t, this[t]))), this._$EU();
  }
  updated(e) {
  }
  firstUpdated(e) {
  }
};
y.elementStyles = [], y.shadowRootOptions = { mode: "open" }, y[w("elementProperties")] = /* @__PURE__ */ new Map(), y[w("finalized")] = /* @__PURE__ */ new Map(), J == null || J({ ReactiveElement: y }), (g.reactiveElementVersions ?? (g.reactiveElementVersions = [])).push("2.0.4");
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
const H = globalThis, N = H.trustedTypes, Z = N ? N.createPolicy("lit-html", { createHTML: (e) => e }) : void 0, nt = "$lit$", f = `lit$${Math.random().toFixed(9).slice(2)}$`, ot = "?" + f, yt = `<${ot}>`, A = document, C = () => A.createComment(""), P = (e) => e === null || typeof e != "object" && typeof e != "function", D = Array.isArray, gt = (e) => D(e) || typeof (e == null ? void 0 : e[Symbol.iterator]) == "function", k = `[ 	
\f\r]`, S = /<(?:(!--|\/[^a-zA-Z])|(\/?[a-zA-Z][^>\s]*)|(\/?$))/g, F = /-->/g, G = />/g, v = RegExp(`>|${k}(?:([^\\s"'>=/]+)(${k}*=${k}*(?:[^ 	
\f\r"'\`<>=]|("|')|))|$)`, "g"), Q = /'/g, X = /"/g, rt = /^(?:script|style|textarea|title)$/i, lt = (e) => (t, ...s) => ({ _$litType$: e, strings: t, values: s }), Ht = lt(1), Nt = lt(2), E = Symbol.for("lit-noChange"), p = Symbol.for("lit-nothing"), Y = /* @__PURE__ */ new WeakMap(), m = A.createTreeWalker(A, 129);
function ht(e, t) {
  if (!D(e) || !e.hasOwnProperty("raw"))
    throw Error("invalid template strings array");
  return Z !== void 0 ? Z.createHTML(t) : t;
}
const Et = (e, t) => {
  const s = e.length - 1, i = [];
  let n, r = t === 2 ? "<svg>" : t === 3 ? "<math>" : "", o = S;
  for (let h = 0; h < s; h++) {
    const l = e[h];
    let a, c, d = -1, _ = 0;
    for (; _ < l.length && (o.lastIndex = _, c = o.exec(l), c !== null); )
      _ = o.lastIndex, o === S ? c[1] === "!--" ? o = F : c[1] !== void 0 ? o = G : c[2] !== void 0 ? (rt.test(c[2]) && (n = RegExp("</" + c[2], "g")), o = v) : c[3] !== void 0 && (o = v) : o === v ? c[0] === ">" ? (o = n ?? S, d = -1) : c[1] === void 0 ? d = -2 : (d = o.lastIndex - c[2].length, a = c[1], o = c[3] === void 0 ? v : c[3] === '"' ? X : Q) : o === X || o === Q ? o = v : o === F || o === G ? o = S : (o = v, n = void 0);
    const u = o === v && e[h + 1].startsWith("/>") ? " " : "";
    r += o === S ? l + yt : d >= 0 ? (i.push(a), l.slice(0, d) + nt + l.slice(d) + f + u) : l + f + (d === -2 ? h : u);
  }
  return [ht(e, r + (e[s] || "<?>") + (t === 2 ? "</svg>" : t === 3 ? "</math>" : "")), i];
};
class U {
  constructor({ strings: t, _$litType$: s }, i) {
    let n;
    this.parts = [];
    let r = 0, o = 0;
    const h = t.length - 1, l = this.parts, [a, c] = Et(t, s);
    if (this.el = U.createElement(a, i), m.currentNode = this.el.content, s === 2 || s === 3) {
      const d = this.el.content.firstChild;
      d.replaceWith(...d.childNodes);
    }
    for (; (n = m.nextNode()) !== null && l.length < h; ) {
      if (n.nodeType === 1) {
        if (n.hasAttributes())
          for (const d of n.getAttributeNames())
            if (d.endsWith(nt)) {
              const _ = c[o++], u = n.getAttribute(d).split(f), $ = /([.?@])?(.*)/.exec(_);
              l.push({ type: 1, index: r, name: $[2], strings: u, ctor: $[1] === "." ? St : $[1] === "?" ? wt : $[1] === "@" ? Ct : R }), n.removeAttribute(d);
            } else
              d.startsWith(f) && (l.push({ type: 6, index: r }), n.removeAttribute(d));
        if (rt.test(n.tagName)) {
          const d = n.textContent.split(f), _ = d.length - 1;
          if (_ > 0) {
            n.textContent = N ? N.emptyScript : "";
            for (let u = 0; u < _; u++)
              n.append(d[u], C()), m.nextNode(), l.push({ type: 2, index: ++r });
            n.append(d[_], C());
          }
        }
      } else if (n.nodeType === 8)
        if (n.data === ot)
          l.push({ type: 2, index: r });
        else {
          let d = -1;
          for (; (d = n.data.indexOf(f, d + 1)) !== -1; )
            l.push({ type: 7, index: r }), d += f.length - 1;
        }
      r++;
    }
  }
  static createElement(t, s) {
    const i = A.createElement("template");
    return i.innerHTML = t, i;
  }
}
function b(e, t, s = e, i) {
  var n, r;
  if (t === E)
    return t;
  let o = i !== void 0 ? (n = s._$Co) == null ? void 0 : n[i] : s._$Cl;
  const h = P(t) ? void 0 : t._$litDirective$;
  return (o == null ? void 0 : o.constructor) !== h && ((r = o == null ? void 0 : o._$AO) == null || r.call(o, !1), h === void 0 ? o = void 0 : (o = new h(e), o._$AT(e, s, i)), i !== void 0 ? (s._$Co ?? (s._$Co = []))[i] = o : s._$Cl = o), o !== void 0 && (t = b(e, o._$AS(e, t.values), o, i)), t;
}
class bt {
  constructor(t, s) {
    this._$AV = [], this._$AN = void 0, this._$AD = t, this._$AM = s;
  }
  get parentNode() {
    return this._$AM.parentNode;
  }
  get _$AU() {
    return this._$AM._$AU;
  }
  u(t) {
    const { el: { content: s }, parts: i } = this._$AD, n = ((t == null ? void 0 : t.creationScope) ?? A).importNode(s, !0);
    m.currentNode = n;
    let r = m.nextNode(), o = 0, h = 0, l = i[0];
    for (; l !== void 0; ) {
      if (o === l.index) {
        let a;
        l.type === 2 ? a = new O(r, r.nextSibling, this, t) : l.type === 1 ? a = new l.ctor(r, l.name, l.strings, this, t) : l.type === 6 && (a = new Pt(r, this, t)), this._$AV.push(a), l = i[++h];
      }
      o !== (l == null ? void 0 : l.index) && (r = m.nextNode(), o++);
    }
    return m.currentNode = A, n;
  }
  p(t) {
    let s = 0;
    for (const i of this._$AV)
      i !== void 0 && (i.strings !== void 0 ? (i._$AI(t, i, s), s += i.strings.length - 2) : i._$AI(t[s])), s++;
  }
}
class O {
  get _$AU() {
    var t;
    return ((t = this._$AM) == null ? void 0 : t._$AU) ?? this._$Cv;
  }
  constructor(t, s, i, n) {
    this.type = 2, this._$AH = p, this._$AN = void 0, this._$AA = t, this._$AB = s, this._$AM = i, this.options = n, this._$Cv = (n == null ? void 0 : n.isConnected) ?? !0;
  }
  get parentNode() {
    let t = this._$AA.parentNode;
    const s = this._$AM;
    return s !== void 0 && (t == null ? void 0 : t.nodeType) === 11 && (t = s.parentNode), t;
  }
  get startNode() {
    return this._$AA;
  }
  get endNode() {
    return this._$AB;
  }
  _$AI(t, s = this) {
    t = b(this, t, s), P(t) ? t === p || t == null || t === "" ? (this._$AH !== p && this._$AR(), this._$AH = p) : t !== this._$AH && t !== E && this._(t) : t._$litType$ !== void 0 ? this.$(t) : t.nodeType !== void 0 ? this.T(t) : gt(t) ? this.k(t) : this._(t);
  }
  O(t) {
    return this._$AA.parentNode.insertBefore(t, this._$AB);
  }
  T(t) {
    this._$AH !== t && (this._$AR(), this._$AH = this.O(t));
  }
  _(t) {
    this._$AH !== p && P(this._$AH) ? this._$AA.nextSibling.data = t : this.T(A.createTextNode(t)), this._$AH = t;
  }
  $(t) {
    var s;
    const { values: i, _$litType$: n } = t, r = typeof n == "number" ? this._$AC(t) : (n.el === void 0 && (n.el = U.createElement(ht(n.h, n.h[0]), this.options)), n);
    if (((s = this._$AH) == null ? void 0 : s._$AD) === r)
      this._$AH.p(i);
    else {
      const o = new bt(r, this), h = o.u(this.options);
      o.p(i), this.T(h), this._$AH = o;
    }
  }
  _$AC(t) {
    let s = Y.get(t.strings);
    return s === void 0 && Y.set(t.strings, s = new U(t)), s;
  }
  k(t) {
    D(this._$AH) || (this._$AH = [], this._$AR());
    const s = this._$AH;
    let i, n = 0;
    for (const r of t)
      n === s.length ? s.push(i = new O(this.O(C()), this.O(C()), this, this.options)) : i = s[n], i._$AI(r), n++;
    n < s.length && (this._$AR(i && i._$AB.nextSibling, n), s.length = n);
  }
  _$AR(t = this._$AA.nextSibling, s) {
    var i;
    for ((i = this._$AP) == null ? void 0 : i.call(this, !1, !0, s); t && t !== this._$AB; ) {
      const n = t.nextSibling;
      t.remove(), t = n;
    }
  }
  setConnected(t) {
    var s;
    this._$AM === void 0 && (this._$Cv = t, (s = this._$AP) == null || s.call(this, t));
  }
}
class R {
  get tagName() {
    return this.element.tagName;
  }
  get _$AU() {
    return this._$AM._$AU;
  }
  constructor(t, s, i, n, r) {
    this.type = 1, this._$AH = p, this._$AN = void 0, this.element = t, this.name = s, this._$AM = n, this.options = r, i.length > 2 || i[0] !== "" || i[1] !== "" ? (this._$AH = Array(i.length - 1).fill(new String()), this.strings = i) : this._$AH = p;
  }
  _$AI(t, s = this, i, n) {
    const r = this.strings;
    let o = !1;
    if (r === void 0)
      t = b(this, t, s, 0), o = !P(t) || t !== this._$AH && t !== E, o && (this._$AH = t);
    else {
      const h = t;
      let l, a;
      for (t = r[0], l = 0; l < r.length - 1; l++)
        a = b(this, h[i + l], s, l), a === E && (a = this._$AH[l]), o || (o = !P(a) || a !== this._$AH[l]), a === p ? t = p : t !== p && (t += (a ?? "") + r[l + 1]), this._$AH[l] = a;
    }
    o && !n && this.j(t);
  }
  j(t) {
    t === p ? this.element.removeAttribute(this.name) : this.element.setAttribute(this.name, t ?? "");
  }
}
class St extends R {
  constructor() {
    super(...arguments), this.type = 3;
  }
  j(t) {
    this.element[this.name] = t === p ? void 0 : t;
  }
}
class wt extends R {
  constructor() {
    super(...arguments), this.type = 4;
  }
  j(t) {
    this.element.toggleAttribute(this.name, !!t && t !== p);
  }
}
class Ct extends R {
  constructor(t, s, i, n, r) {
    super(t, s, i, n, r), this.type = 5;
  }
  _$AI(t, s = this) {
    if ((t = b(this, t, s, 0) ?? p) === E)
      return;
    const i = this._$AH, n = t === p && i !== p || t.capture !== i.capture || t.once !== i.once || t.passive !== i.passive, r = t !== p && (i === p || n);
    n && this.element.removeEventListener(this.name, this, i), r && this.element.addEventListener(this.name, this, t), this._$AH = t;
  }
  handleEvent(t) {
    var s;
    typeof this._$AH == "function" ? this._$AH.call(((s = this.options) == null ? void 0 : s.host) ?? this.element, t) : this._$AH.handleEvent(t);
  }
}
class Pt {
  constructor(t, s, i) {
    this.element = t, this.type = 6, this._$AN = void 0, this._$AM = s, this.options = i;
  }
  get _$AU() {
    return this._$AM._$AU;
  }
  _$AI(t) {
    b(this, t);
  }
}
const tt = H.litHtmlPolyfillSupport;
tt == null || tt(U, O), (H.litHtmlVersions ?? (H.litHtmlVersions = [])).push("3.2.1");
const Ut = (e, t, s) => {
  const i = (s == null ? void 0 : s.renderBefore) ?? t;
  let n = i._$litPart$;
  if (n === void 0) {
    const r = (s == null ? void 0 : s.renderBefore) ?? null;
    i._$litPart$ = n = new O(t.insertBefore(C(), r), r, void 0, s ?? {});
  }
  return n._$AI(e), n;
};
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
let x = class extends y {
  constructor() {
    super(...arguments), this.renderOptions = { host: this }, this._$Do = void 0;
  }
  createRenderRoot() {
    var e;
    const t = super.createRenderRoot();
    return (e = this.renderOptions).renderBefore ?? (e.renderBefore = t.firstChild), t;
  }
  update(e) {
    const t = this.render();
    this.hasUpdated || (this.renderOptions.isConnected = this.isConnected), super.update(e), this._$Do = Ut(t, this.renderRoot, this.renderOptions);
  }
  connectedCallback() {
    var e;
    super.connectedCallback(), (e = this._$Do) == null || e.setConnected(!0);
  }
  disconnectedCallback() {
    var e;
    super.disconnectedCallback(), (e = this._$Do) == null || e.setConnected(!1);
  }
  render() {
    return E;
  }
};
var et;
x._$litElement$ = !0, x.finalized = !0, (et = globalThis.litElementHydrateSupport) == null || et.call(globalThis, { LitElement: x });
const st = globalThis.litElementPolyfillSupport;
st == null || st({ LitElement: x });
(globalThis.litElementVersions ?? (globalThis.litElementVersions = [])).push("4.1.1");
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
const Ot = { attribute: !0, type: String, converter: M, reflect: !1, hasChanged: z }, Tt = (e = Ot, t, s) => {
  const { kind: i, metadata: n } = s;
  let r = globalThis.litPropertyMetadata.get(n);
  if (r === void 0 && globalThis.litPropertyMetadata.set(n, r = /* @__PURE__ */ new Map()), r.set(s.name, e), i === "accessor") {
    const { name: o } = s;
    return { set(h) {
      const l = t.get.call(this);
      t.set.call(this, h), this.requestUpdate(o, l, e);
    }, init(h) {
      return h !== void 0 && this.P(o, void 0, e), h;
    } };
  }
  if (i === "setter") {
    const { name: o } = s;
    return function(h) {
      const l = this[o];
      t.call(this, h), this.requestUpdate(o, l, e);
    };
  }
  throw Error("Unsupported decorator location: " + i);
};
function Rt(e) {
  return (t, s) => typeof s == "object" ? Tt(e, t, s) : ((i, n, r) => {
    const o = n.hasOwnProperty(r);
    return n.constructor.createProperty(r, o ? { ...i, wrapped: !0 } : i), o ? Object.getOwnPropertyDescriptor(n, r) : void 0;
  })(e, t, s);
}
export {
  x as H,
  Rt as M,
  Ht as O,
  Nt as T,
  Mt as U,
  p as d,
  xt as o,
  E as v
};
