import Store, { Source } from '@webbitjs/store';
import { WebbitConfig } from './element-config';
import PropertyHandler from './property-handler';
declare class Webbit {
    #private;
    static UNIQUE_ID: number;
    get sourceProvider(): string | undefined;
    set sourceProvider(provider: string | undefined);
    get sourceKey(): string | undefined;
    set sourceKey(key: string | undefined);
    get source(): Source | undefined;
    get hasSource(): boolean;
    constructor(element: HTMLElement, store: Store, config: WebbitConfig);
    subscribe(callback: (value: unknown) => void): () => void;
    getPropertyHandler(name: string): PropertyHandler | undefined;
    connect(): void;
    disconnect(): void;
    setDefaultPropertyValue(property: string, value: unknown): void;
    getDefaultPropertyValue(property: string): unknown;
    getDefaultPropertyValues(): Record<string, unknown>;
    getConfig(): WebbitConfig;
}
export default Webbit;
