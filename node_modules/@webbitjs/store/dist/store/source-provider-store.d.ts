import SourceProvider from '../source-provider';
import Source from './source';
export declare type SourceSubscriber = (sourceValue: unknown, parentKey: string, sourceKey: string) => void;
export declare type AllSourcesSubscriber = (sourceValue: unknown, sourceKey: string) => unknown;
declare class SourceProviderStore {
    #private;
    constructor(provider: SourceProvider);
    getSourceProvider(): SourceProvider;
    getSource(key: string): Source | undefined;
    getSourceValue(key: string): unknown;
    updateSource(key: string, value: unknown, notify?: boolean): void;
    clearSources(): void;
    removeSource(key: string, notify?: boolean): void;
    subscribe(key: string, callback: SourceSubscriber, callImmediately: boolean): () => void;
    subscribeAll(callback: AllSourcesSubscriber, callImmediately: boolean): () => void;
    unsubscribeFromProvider(): void;
}
export default SourceProviderStore;
