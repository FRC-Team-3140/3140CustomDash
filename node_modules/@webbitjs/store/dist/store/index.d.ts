import { SourceSubscriber, AllSourcesSubscriber } from './source-provider-store';
import SourceProvider from '../source-provider';
import Source from './source';
declare class Store {
    #private;
    hasSourceProvider(providerName: string): boolean;
    addSourceProvider(providerName: string, sourceProvider: SourceProvider): void;
    sourceProviderAdded(listener: (providerName: string) => void): void;
    removeSourceProvider(providerName: string): void;
    getSourceProvider(providerName: string): SourceProvider;
    getSourceProviderNames(): Array<string>;
    setDefaultSourceProvider(providerName: string): void;
    defaultSourceProviderSet(listener: (providerName: string) => void): void;
    getDefaultSourceProvider(): string | undefined;
    getSource(providerName: string, key: string): Source | undefined;
    getSourceValue(providerName: string, key: string): unknown;
    subscribe(providerName: string, key: string, callback: SourceSubscriber, callImmediately: boolean): () => void;
    subscribeAll(providerName: string, callback: AllSourcesSubscriber, callImmediately: boolean): () => void;
}
export default Store;
